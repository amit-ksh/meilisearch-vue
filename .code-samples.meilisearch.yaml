landing_getting_started_1: |-
  // In main.js
  import Vue from 'vue';
  import App from './App.vue';
  import InstantSearch from 'vue-instantsearch';

  Vue.use(InstantSearch);

  new Vue({
    el: '#app',
    render: h => h(App),
  });


  // In App.vue
  <template>
    <ais-instant-search :search-client="searchClient" index-name="movies">
      <ais-search-box />
      <ais-hits>
        <div slot="item" slot-scope="{ item }">
          <h2>{{ item.title }}</h2>
        </div>
      </ais-hits>
    </ais-instant-search>
  </template>

  <script>
  import { instantMeiliSearch } from '@meilisearch/instant-meilisearch';

  export default {
    data() {
      return {
        searchClient: instantMeiliSearch(
          "http://localhost:7700",
          "searchKey"
        ),
      };
    },
  };
  </script>
getting_started_front_end_integration_md: |-
  The following example uses [Vue 2](https://vuejs.org/), the second major release of Vue, a JavaScript framework for building web user interfaces. An example using Vue 3 is coming soon.

  ```html
  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="utf-8" />
    <link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@meilisearch/instant-meilisearch/templates/basic_search.css" />
  </head>

  <body>
    <div id="app" class="wrapper">
      <ais-instant-search :search-client="searchClient" index-name="movies">
        <ais-configure :hits-per-page.camel="10" />
        <ais-search-box placeholder="Search hereâ€¦" class="searchbox"></ais-search-box>
        <ais-hits>
          <div slot="item" slot-scope="{ item }">
            <ais-highlight :hit="item" attribute="title" />
          </div>
        </ais-hits>
      </ais-instant-search>
    </div>
  </body>
  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14"></script>
  <script src="https://cdn.jsdelivr.net/npm/vue-instantsearch/vue2/umd/index.js"></script>
  <script
    src="https://cdn.jsdelivr.net/npm/@meilisearch/instant-meilisearch/dist/instant-meilisearch.umd.min.js"></script>
  <script>
    Vue.use(VueInstantSearch)
    var app = new Vue({
      el: '#app',
      data: {
        searchClient: instantMeiliSearch('http://127.0.0.1:7700')
      }
    })
  </script>

  </html>
  ```

  Here's what's happening:

  - To use `instant-meilisearch` with Vue, you must add `<ais-instant-search>`, `<ais-search-box>`, and `<ais-hits>` to your application's HTML. These components are mandatory when generating the`instant-meilisearch` interface
  - Other Vue components such as `<ais-configure>` and `<ais-highlight>` are optional. They offer greater control over `instant-meilisearch`'s behavior and appearance
  - The first two`<script src="..">` tags import libraries needed to run `instant-meilisearch` with Vue
  - The third and final `<script>` creates a new Vue instance and instructs it to use `instant-meilisearch`


landing_getting_started_with_vue_3: |-
  // In main.js
  import { createApp } from "vue";
  import App from "./App.vue";
  import InstantSearch from "vue-instantsearch/vue3/es";
  import "instantsearch.css/themes/algolia-min.css";

  createApp(App).use(InstantSearch).mount("#app");


  // In App.vue
  <template>
    <ais-instant-search :search-client="searchClient" index-name="movies">
      <ais-search-box />
      <ais-hits>
        <div slot="item" slot-scope="{ item }">
          <h2>{{ item.title }}</h2>
        </div>
      </ais-hits>
    </ais-instant-search>
  </template>

  <script>
  import { instantMeiliSearch } from '@meilisearch/instant-meilisearch';

  export default {
    data() {
      return {
        searchClient: instantMeiliSearch(
          "http://localhost:7700",
          "lion"
        ),
      };
    },
  };
  </script>

getting_started_front_end_integration_md_vue_3: |-
  The following example uses [Vue 3](https://vuejs.org/).

  ```html
<!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="utf-8" />

    <link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/@meilisearch/instant-meilisearch/templates/basic_search.css" />

      <style>
        body,
        h1 {
          margin: 0;
          padding: 0;
        }

        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,
            Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
        }

        .disclaimer {
          text-align: center;
          font-size: 1.2rem;
        }

        .header {
          display: flex;
          align-items: center;
          min-height: 50px;
          padding: 0.5rem 1rem;
          background-image: linear-gradient(to right, #4dba87, #2f9088);
          color: #fff;
          margin-bottom: 1rem;
        }

        .header a {
          color: #fff;
          text-decoration: none;
        }

        .header-title {
          font-size: 1.2rem;
          font-weight: normal;
        }

        .header-title::after {
          content: ' â–¸ ';
          padding: 0 0.5rem;
        }

        .header-subtitle {
          font-size: 1.2rem;
        }

        .search-panel__results {
          padding: 2rem;
        }

        .searchbox {
          margin: 2rem 0 1rem;
        }

        .ais-Highlight-highlighted {
          font-size: 3rem;
        }

        .game-container {
          display: grid;
          grid-template-columns: 2;
          grid-template-rows: 1;
          gap: 4;
        }

        .left {
          grid-column: 1/1;
        }

        .right {
          font-size: 2rem;
          align-self: center;
        } 

        @media screen and (min-width: 1100px) {
          .right {
            grid-column: 2 / 2;
          }
        }
      </style>
  </head>

  <body>
    <div id="app">
      <header class="header">
        <h1 class="header-title">Meilisearch + Vue InstantSearch</h1>
        <p class="header-subtitle">Search in Steam video games ðŸŽ®</p>
      </header>
      <p class="disclaimer">
        This is not the official Steam dataset but only for demo purpose. Enjoy
        searching with Meilisearch!
      </p>


      <ais-instant-search :search-client="searchClient" index-name="steam-video-games">
        
        <div class="search-panel__results">
          <ais-configure :hits-per-page.camel="6" />
          <ais-search-box class="searchbox"></ais-search-box>

          <ais-hits>
            <template v-slot:item="{ item }">
              <div class="game-container">
                  <div class="left">
                    <div class="hit-name">
                      <ais-highlight :hit="item" attribute="name" style="font-size: 3rem;" />
                    </div>
                    <img :src="item.image" :alt="item.image" style="margin-top: 20px; width: 600px;" />
                  </div>
                  <div class="right">
                    <div class="hit-info" style="margin: 15px 0 0;">Price: {{ item.price }}</div>
                    <div class="hit-info">Release date: {{ item.releaseDate }}</div>
                    <div class="hit-info">
                      Recommended: {{ item.recommendationCount }}
                    </div>
                  </div> 
                </div>
              </template>
            </ais-hits>
        </div>
      </ais-instant-search>
    </div>
  </body>
  
  <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vue-instantsearch@4.5.0/vue3/umd/index.js"></script>
  <script
    src="https://cdn.jsdelivr.net/npm/@meilisearch/instant-meilisearch/dist/instant-meilisearch.umd.min.js">
  </script>
  
  <script type="module">
    const InstantSearch = {
      install(localVue) {
        Object.keys(VueInstantSearch).forEach(widgetName => {
          localVue.component(VueInstantSearch[widgetName].name, VueInstantSearch[widgetName]);
        });
      },
    };


    const app = Vue
      .createApp({
        data() {
          return {
            searchClient: instantMeiliSearch(
              'https://integration-demos.meilisearch.com/',
              '99d1e034ed32eb569f9edc27962cccf90b736e4c5a70f7f5e76b9fab54d6a185',
              {
                paginationTotalHits: 30,
              }
            )
          }
        }
      })
      .use(InstantSearch)
      .mount('#app')
  </script>

  </html>
  ```
